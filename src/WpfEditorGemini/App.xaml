<Application x:Class="JsonConfigEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:JsonConfigEditor.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Views/NodeValueTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!-- Converters -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
            
            <!-- Expand/Collapse Toggle Button Style -->
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="Transparent" Width="16" Height="16">
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="▶" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                    <Setter Property="Text" Value="▼" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Application-wide styles -->
            <Style TargetType="DataGrid">
                <Setter Property="GridLinesVisibility" Value="Horizontal"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="CanUserReorderColumns" Value="False"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="SelectionMode" Value="Extended"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
                <Setter Property="EnableRowVirtualization" Value="True"/>
                <Setter Property="EnableColumnVirtualization" Value="True"/>
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
            </Style>
            
            <!-- Style for schema-only nodes (grayed out) -->
            <Style x:Key="SchemaOnlyNodeStyle" TargetType="DataGridRow">
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="FontStyle" Value="Italic"/>
            </Style>
            
            <!-- Style for unschematized nodes (dark blue) -->
            <Style x:Key="UnschematizedNodeStyle" TargetType="DataGridRow">
                <Setter Property="Foreground" Value="DarkBlue"/>
            </Style>
            
            <!-- Style for external/missing ref nodes (dark magenta) -->
            <Style x:Key="ExternalRefNodeStyle" TargetType="DataGridRow">
                <Setter Property="Foreground" Value="DarkMagenta"/>
            </Style>
            
            <!-- Style for validation error nodes (red border) -->
            <Style x:Key="ValidationErrorStyle" TargetType="DataGridRow">
                <Setter Property="BorderBrush" Value="Red"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
            
            <!-- Style for search highlighted nodes -->
            <Style x:Key="SearchHighlightStyle" TargetType="DataGridRow">
                <Setter Property="Background" Value="Yellow"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application> 